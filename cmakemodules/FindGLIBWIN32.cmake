# - Try to find the GLIBWIN32 library under windows
# Once done this will define
#
#  GLIBWIN32_FOUND - system has the GLIBWIN32 library
#  GLIBWIN32_INCLUDE_DIR - the GLIBWIN32 include directory
#  GLIBWIN32_LIBRARIES - The libraries needed to use GLIBWIN32

# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>
# Copyright (c) 2009, Collabora Ltd.
# Redistribution and use is allowed according to the terms of the BSD license.
# For details see the accompanying COPYING-CMAKE-SCRIPTS file.


IF(GLIBWIN32_LIBRARIES)
   SET(GLIBWIN32_FIND_QUIETLY FALSE)
ENDIF(GLIBWIN32_LIBRARIES)

IF(GLIB_WIN_DEBUG AND GLIB_WIN_RELEASE)
   SET(LIB_FOUND 1)
ENDIF(GLIB_WIN_DEBUG AND GLIB_WIN_RELEASE)

FIND_PATH(GLIBWIN32_INCLUDE_DIR glib.h)

IF(WIN32 AND MSVC)
   # /MD and /MDd are the standard values - if somone wants to use
   # others, the libnames have to change here too
   # use also ssl and ssleay32 in debug as fallback for GLIBWIN32 < 0.9.8b

   FIND_LIBRARY(GLIB_WIN_DEBUG NAMES glib-2.0 )
   FIND_LIBRARY(GLIB_WIN_RELEASE NAMES glib-2.0)

   IF(MSVC_IDE)
      IF(GLIB_WIN_DEBUG AND GLIB_WIN_RELEASE)
         SET(GLIBWIN32_LIBRARIES optimized ${GLIB_WIN_RELEASE} debug ${GLIB_WIN_DEBUG})
      ELSE(GLIB_WIN_DEBUG AND GLIB_WIN_RELEASE)
         SET(GLIBWIN32_LIBRARIES NOTFOUND)
         MESSAGE(STATUS "Could not find the debug and release version of GLIBWIN32")
      ENDIF(GLIB_WIN_DEBUG AND GLIB_WIN_RELEASE)
   ELSE(MSVC_IDE)
      STRING(TOLOWER ${CMAKE_BUILD_TYPE} CMAKE_BUILD_TYPE_TOLOWER)
      IF(CMAKE_BUILD_TYPE_TOLOWER MATCHES debug)
         SET(GLIBWIN32_LIBRARIES ${GLIB_WIN_DEBUG})
      ELSE(CMAKE_BUILD_TYPE_TOLOWER MATCHES debug)
         SET(GLIBWIN32_LIBRARIES ${GLIB_WIN_RELEASE})
      ENDIF(CMAKE_BUILD_TYPE_TOLOWER MATCHES debug)
   ENDIF(MSVC_IDE)
   MARK_AS_ADVANCED(GLIB_WIN_DEBUG GLIB_WIN_RELEASE)
ELSE(WIN32 AND MSVC)

   FIND_LIBRARY(GLIBWIN32_LIBRARIES NAMES ssl ssleay32 ssleay32MD )

ENDIF(WIN32 AND MSVC)

IF(GLIBWIN32_INCLUDE_DIR AND GLIBWIN32_LIBRARIES)
   SET(GLIBWIN32_FOUND TRUE)
ELSE(GLIBWIN32_INCLUDE_DIR AND GLIBWIN32_LIBRARIES)
   SET(GLIBWIN32_FOUND FALSE)
ENDIF (GLIBWIN32_INCLUDE_DIR AND GLIBWIN32_LIBRARIES)

IF (GLIBWIN32_FOUND)
   IF (NOT GLIBWIN32_FIND_QUIETLY)
      MESSAGE(STATUS "Found GLIBWIN32: ${GLIBWIN32_LIBRARIES}")
   ENDIF (NOT GLIBWIN32_FIND_QUIETLY)
ELSE (GLIBWIN32_FOUND)
   IF (GLIBWIN32_FIND_REQUIRED)
      MESSAGE(FATAL_ERROR "Could NOT find GLIBWIN32")
   ENDIF (GLIBWIN32_FIND_REQUIRED)
ENDIF (GLIBWIN32_FOUND)

MARK_AS_ADVANCED(GLIBWIN32_INCLUDE_DIR GLIBWIN32_LIBRARIES)

